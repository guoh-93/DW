//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace 赵峰的DEMO.web_未来_测试 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MESWSMainSoap", Namespace="http://MasterMES.cn/")]
    public partial class MESWSMain : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetData_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQL_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_测试OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_BOMSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MESWSMain() {
            this.Url = global::赵峰的DEMO.Properties.Settings.Default.赵峰的DEMO_web_未来_测试_MESWSMain;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event SetDataCompletedEventHandler SetDataCompleted;
        
        /// <remarks/>
        public event SetEXSQLCompletedEventHandler SetEXSQLCompleted;
        
        /// <remarks/>
        public event GetData_ERPCompletedEventHandler GetData_ERPCompleted;
        
        /// <remarks/>
        public event SetData_ERPCompletedEventHandler SetData_ERPCompleted;
        
        /// <remarks/>
        public event SetEXSQL_ERPCompletedEventHandler SetEXSQL_ERPCompleted;
        
        /// <remarks/>
        public event fun_测试CompletedEventHandler fun_测试Completed;
        
        /// <remarks/>
        public event fun_BOMSCompletedEventHandler fun_BOMSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/GetData", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData(string SQL) {
            object[] results = this.Invoke("GetData", new object[] {
                        SQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL) {
            this.GetDataAsync(SQL, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        SQL}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/SetData", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData(string tableName, System.Data.DataTable dt) {
            this.Invoke("SetData", new object[] {
                        tableName,
                        dt});
        }
        
        /// <remarks/>
        public void SetDataAsync(string tableName, System.Data.DataTable dt) {
            this.SetDataAsync(tableName, dt, null);
        }
        
        /// <remarks/>
        public void SetDataAsync(string tableName, System.Data.DataTable dt, object userState) {
            if ((this.SetDataOperationCompleted == null)) {
                this.SetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataOperationCompleted);
            }
            this.InvokeAsync("SetData", new object[] {
                        tableName,
                        dt}, this.SetDataOperationCompleted, userState);
        }
        
        private void OnSetDataOperationCompleted(object arg) {
            if ((this.SetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/SetEXSQL", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL(string SQL) {
            object[] results = this.Invoke("SetEXSQL", new object[] {
                        SQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQLAsync(string SQL) {
            this.SetEXSQLAsync(SQL, null);
        }
        
        /// <remarks/>
        public void SetEXSQLAsync(string SQL, object userState) {
            if ((this.SetEXSQLOperationCompleted == null)) {
                this.SetEXSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQLOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL", new object[] {
                        SQL}, this.SetEXSQLOperationCompleted, userState);
        }
        
        private void OnSetEXSQLOperationCompleted(object arg) {
            if ((this.SetEXSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQLCompleted(this, new SetEXSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/GetData_ERP", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData_ERP(string SQL) {
            object[] results = this.Invoke("GetData_ERP", new object[] {
                        SQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_ERPAsync(string SQL) {
            this.GetData_ERPAsync(SQL, null);
        }
        
        /// <remarks/>
        public void GetData_ERPAsync(string SQL, object userState) {
            if ((this.GetData_ERPOperationCompleted == null)) {
                this.GetData_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_ERPOperationCompleted);
            }
            this.InvokeAsync("GetData_ERP", new object[] {
                        SQL}, this.GetData_ERPOperationCompleted, userState);
        }
        
        private void OnGetData_ERPOperationCompleted(object arg) {
            if ((this.GetData_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_ERPCompleted(this, new GetData_ERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/SetData_ERP", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData_ERP(string tableName, System.Data.DataTable dt) {
            this.Invoke("SetData_ERP", new object[] {
                        tableName,
                        dt});
        }
        
        /// <remarks/>
        public void SetData_ERPAsync(string tableName, System.Data.DataTable dt) {
            this.SetData_ERPAsync(tableName, dt, null);
        }
        
        /// <remarks/>
        public void SetData_ERPAsync(string tableName, System.Data.DataTable dt, object userState) {
            if ((this.SetData_ERPOperationCompleted == null)) {
                this.SetData_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetData_ERPOperationCompleted);
            }
            this.InvokeAsync("SetData_ERP", new object[] {
                        tableName,
                        dt}, this.SetData_ERPOperationCompleted, userState);
        }
        
        private void OnSetData_ERPOperationCompleted(object arg) {
            if ((this.SetData_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetData_ERPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/SetEXSQL_ERP", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL_ERP(string SQL) {
            object[] results = this.Invoke("SetEXSQL_ERP", new object[] {
                        SQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQL_ERPAsync(string SQL) {
            this.SetEXSQL_ERPAsync(SQL, null);
        }
        
        /// <remarks/>
        public void SetEXSQL_ERPAsync(string SQL, object userState) {
            if ((this.SetEXSQL_ERPOperationCompleted == null)) {
                this.SetEXSQL_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQL_ERPOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL_ERP", new object[] {
                        SQL}, this.SetEXSQL_ERPOperationCompleted, userState);
        }
        
        private void OnSetEXSQL_ERPOperationCompleted(object arg) {
            if ((this.SetEXSQL_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQL_ERPCompleted(this, new SetEXSQL_ERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/fun_测试", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fun_测试() {
            object[] results = this.Invoke("fun_测试", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fun_测试Async() {
            this.fun_测试Async(null);
        }
        
        /// <remarks/>
        public void fun_测试Async(object userState) {
            if ((this.fun_测试OperationCompleted == null)) {
                this.fun_测试OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_测试OperationCompleted);
            }
            this.InvokeAsync("fun_测试", new object[0], this.fun_测试OperationCompleted, userState);
        }
        
        private void Onfun_测试OperationCompleted(object arg) {
            if ((this.fun_测试Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_测试Completed(this, new fun_测试CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/fun_BOMS", RequestNamespace="http://MasterMES.cn/", ResponseNamespace="http://MasterMES.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable fun_BOMS(System.Data.DataTable dt) {
            object[] results = this.Invoke("fun_BOMS", new object[] {
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void fun_BOMSAsync(System.Data.DataTable dt) {
            this.fun_BOMSAsync(dt, null);
        }
        
        /// <remarks/>
        public void fun_BOMSAsync(System.Data.DataTable dt, object userState) {
            if ((this.fun_BOMSOperationCompleted == null)) {
                this.fun_BOMSOperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_BOMSOperationCompleted);
            }
            this.InvokeAsync("fun_BOMS", new object[] {
                        dt}, this.fun_BOMSOperationCompleted, userState);
        }
        
        private void Onfun_BOMSOperationCompleted(object arg) {
            if ((this.fun_BOMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_BOMSCompleted(this, new fun_BOMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQLCompletedEventHandler(object sender, SetEXSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetData_ERPCompletedEventHandler(object sender, GetData_ERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_ERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_ERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetData_ERPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQL_ERPCompletedEventHandler(object sender, SetEXSQL_ERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQL_ERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQL_ERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_测试CompletedEventHandler(object sender, fun_测试CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_测试CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_测试CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_BOMSCompletedEventHandler(object sender, fun_BOMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_BOMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_BOMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591