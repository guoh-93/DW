//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WSAdapter.ERP_MO {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MESWSMainSoap", Namespace="http://MasterERP.cn/")]
    public partial class MESWSMain : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetData_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQL_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_销售明细OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_lldOperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_四个量OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAuthorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_PingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MESWSMain() {
            this.Url = global::WSAdapter.Properties.Settings.Default.WSAdapter_ERP_MO_MESWSMain;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event SetDataCompletedEventHandler SetDataCompleted;
        
        /// <remarks/>
        public event SetEXSQLCompletedEventHandler SetEXSQLCompleted;
        
        /// <remarks/>
        public event GetData_ERPCompletedEventHandler GetData_ERPCompleted;
        
        /// <remarks/>
        public event SetData_ERPCompletedEventHandler SetData_ERPCompleted;
        
        /// <remarks/>
        public event SetEXSQL_ERPCompletedEventHandler SetEXSQL_ERPCompleted;
        
        /// <remarks/>
        public event fun_销售明细CompletedEventHandler fun_销售明细Completed;
        
        /// <remarks/>
        public event fun_lldCompletedEventHandler fun_lldCompleted;
        
        /// <remarks/>
        public event fun_四个量CompletedEventHandler fun_四个量Completed;
        
        /// <remarks/>
        public event CheckAuthorityCompletedEventHandler CheckAuthorityCompleted;
        
        /// <remarks/>
        public event WS_PingCompletedEventHandler WS_PingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/GetData", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData(string SQL) {
            object[] results = this.Invoke("GetData", new object[] {
                        SQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL) {
            this.GetDataAsync(SQL, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        SQL}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/SetData", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData(string tableName, System.Data.DataTable dt) {
            this.Invoke("SetData", new object[] {
                        tableName,
                        dt});
        }
        
        /// <remarks/>
        public void SetDataAsync(string tableName, System.Data.DataTable dt) {
            this.SetDataAsync(tableName, dt, null);
        }
        
        /// <remarks/>
        public void SetDataAsync(string tableName, System.Data.DataTable dt, object userState) {
            if ((this.SetDataOperationCompleted == null)) {
                this.SetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataOperationCompleted);
            }
            this.InvokeAsync("SetData", new object[] {
                        tableName,
                        dt}, this.SetDataOperationCompleted, userState);
        }
        
        private void OnSetDataOperationCompleted(object arg) {
            if ((this.SetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/SetEXSQL", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL(string SQL) {
            object[] results = this.Invoke("SetEXSQL", new object[] {
                        SQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQLAsync(string SQL) {
            this.SetEXSQLAsync(SQL, null);
        }
        
        /// <remarks/>
        public void SetEXSQLAsync(string SQL, object userState) {
            if ((this.SetEXSQLOperationCompleted == null)) {
                this.SetEXSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQLOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL", new object[] {
                        SQL}, this.SetEXSQLOperationCompleted, userState);
        }
        
        private void OnSetEXSQLOperationCompleted(object arg) {
            if ((this.SetEXSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQLCompleted(this, new SetEXSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/GetData_ERP", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData_ERP(string SQL) {
            object[] results = this.Invoke("GetData_ERP", new object[] {
                        SQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_ERPAsync(string SQL) {
            this.GetData_ERPAsync(SQL, null);
        }
        
        /// <remarks/>
        public void GetData_ERPAsync(string SQL, object userState) {
            if ((this.GetData_ERPOperationCompleted == null)) {
                this.GetData_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_ERPOperationCompleted);
            }
            this.InvokeAsync("GetData_ERP", new object[] {
                        SQL}, this.GetData_ERPOperationCompleted, userState);
        }
        
        private void OnGetData_ERPOperationCompleted(object arg) {
            if ((this.GetData_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_ERPCompleted(this, new GetData_ERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/SetData_ERP", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData_ERP(string tableName, System.Data.DataTable dt) {
            this.Invoke("SetData_ERP", new object[] {
                        tableName,
                        dt});
        }
        
        /// <remarks/>
        public void SetData_ERPAsync(string tableName, System.Data.DataTable dt) {
            this.SetData_ERPAsync(tableName, dt, null);
        }
        
        /// <remarks/>
        public void SetData_ERPAsync(string tableName, System.Data.DataTable dt, object userState) {
            if ((this.SetData_ERPOperationCompleted == null)) {
                this.SetData_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetData_ERPOperationCompleted);
            }
            this.InvokeAsync("SetData_ERP", new object[] {
                        tableName,
                        dt}, this.SetData_ERPOperationCompleted, userState);
        }
        
        private void OnSetData_ERPOperationCompleted(object arg) {
            if ((this.SetData_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetData_ERPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/SetEXSQL_ERP", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL_ERP(string SQL) {
            object[] results = this.Invoke("SetEXSQL_ERP", new object[] {
                        SQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQL_ERPAsync(string SQL) {
            this.SetEXSQL_ERPAsync(SQL, null);
        }
        
        /// <remarks/>
        public void SetEXSQL_ERPAsync(string SQL, object userState) {
            if ((this.SetEXSQL_ERPOperationCompleted == null)) {
                this.SetEXSQL_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQL_ERPOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL_ERP", new object[] {
                        SQL}, this.SetEXSQL_ERPOperationCompleted, userState);
        }
        
        private void OnSetEXSQL_ERPOperationCompleted(object arg) {
            if ((this.SetEXSQL_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQL_ERPCompleted(this, new SetEXSQL_ERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/fun_销售明细", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable fun_销售明细(string str_sql) {
            object[] results = this.Invoke("fun_销售明细", new object[] {
                        str_sql});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void fun_销售明细Async(string str_sql) {
            this.fun_销售明细Async(str_sql, null);
        }
        
        /// <remarks/>
        public void fun_销售明细Async(string str_sql, object userState) {
            if ((this.fun_销售明细OperationCompleted == null)) {
                this.fun_销售明细OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_销售明细OperationCompleted);
            }
            this.InvokeAsync("fun_销售明细", new object[] {
                        str_sql}, this.fun_销售明细OperationCompleted, userState);
        }
        
        private void Onfun_销售明细OperationCompleted(object arg) {
            if ((this.fun_销售明细Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_销售明细Completed(this, new fun_销售明细CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/fun_lld", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fun_lld(System.Data.DataSet ds, System.Data.DataTable drr, string s_id, string s_name, string s_llrID, string s_llrname, string s_gdfzrID, string s_gdfzrname, string str_待领料单号) {
            object[] results = this.Invoke("fun_lld", new object[] {
                        ds,
                        drr,
                        s_id,
                        s_name,
                        s_llrID,
                        s_llrname,
                        s_gdfzrID,
                        s_gdfzrname,
                        str_待领料单号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fun_lldAsync(System.Data.DataSet ds, System.Data.DataTable drr, string s_id, string s_name, string s_llrID, string s_llrname, string s_gdfzrID, string s_gdfzrname, string str_待领料单号) {
            this.fun_lldAsync(ds, drr, s_id, s_name, s_llrID, s_llrname, s_gdfzrID, s_gdfzrname, str_待领料单号, null);
        }
        
        /// <remarks/>
        public void fun_lldAsync(System.Data.DataSet ds, System.Data.DataTable drr, string s_id, string s_name, string s_llrID, string s_llrname, string s_gdfzrID, string s_gdfzrname, string str_待领料单号, object userState) {
            if ((this.fun_lldOperationCompleted == null)) {
                this.fun_lldOperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_lldOperationCompleted);
            }
            this.InvokeAsync("fun_lld", new object[] {
                        ds,
                        drr,
                        s_id,
                        s_name,
                        s_llrID,
                        s_llrname,
                        s_gdfzrID,
                        s_gdfzrname,
                        str_待领料单号}, this.fun_lldOperationCompleted, userState);
        }
        
        private void Onfun_lldOperationCompleted(object arg) {
            if ((this.fun_lldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_lldCompleted(this, new fun_lldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/fun_四个量", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable fun_四个量(System.Data.DataTable dtx) {
            object[] results = this.Invoke("fun_四个量", new object[] {
                        dtx});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void fun_四个量Async(System.Data.DataTable dtx) {
            this.fun_四个量Async(dtx, null);
        }
        
        /// <remarks/>
        public void fun_四个量Async(System.Data.DataTable dtx, object userState) {
            if ((this.fun_四个量OperationCompleted == null)) {
                this.fun_四个量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_四个量OperationCompleted);
            }
            this.InvokeAsync("fun_四个量", new object[] {
                        dtx}, this.fun_四个量OperationCompleted, userState);
        }
        
        private void Onfun_四个量OperationCompleted(object arg) {
            if ((this.fun_四个量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_四个量Completed(this, new fun_四个量CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/CheckAuthority", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckAuthority(string UserName, string Pdesc) {
            object[] results = this.Invoke("CheckAuthority", new object[] {
                        UserName,
                        Pdesc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAuthorityAsync(string UserName, string Pdesc) {
            this.CheckAuthorityAsync(UserName, Pdesc, null);
        }
        
        /// <remarks/>
        public void CheckAuthorityAsync(string UserName, string Pdesc, object userState) {
            if ((this.CheckAuthorityOperationCompleted == null)) {
                this.CheckAuthorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAuthorityOperationCompleted);
            }
            this.InvokeAsync("CheckAuthority", new object[] {
                        UserName,
                        Pdesc}, this.CheckAuthorityOperationCompleted, userState);
        }
        
        private void OnCheckAuthorityOperationCompleted(object arg) {
            if ((this.CheckAuthorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAuthorityCompleted(this, new CheckAuthorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterERP.cn/WS_Ping", RequestNamespace="http://MasterERP.cn/", ResponseNamespace="http://MasterERP.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WS_Ping(string PingID) {
            object[] results = this.Invoke("WS_Ping", new object[] {
                        PingID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WS_PingAsync(string PingID) {
            this.WS_PingAsync(PingID, null);
        }
        
        /// <remarks/>
        public void WS_PingAsync(string PingID, object userState) {
            if ((this.WS_PingOperationCompleted == null)) {
                this.WS_PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_PingOperationCompleted);
            }
            this.InvokeAsync("WS_Ping", new object[] {
                        PingID}, this.WS_PingOperationCompleted, userState);
        }
        
        private void OnWS_PingOperationCompleted(object arg) {
            if ((this.WS_PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_PingCompleted(this, new WS_PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQLCompletedEventHandler(object sender, SetEXSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetData_ERPCompletedEventHandler(object sender, GetData_ERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_ERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_ERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetData_ERPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQL_ERPCompletedEventHandler(object sender, SetEXSQL_ERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQL_ERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQL_ERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_销售明细CompletedEventHandler(object sender, fun_销售明细CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_销售明细CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_销售明细CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_lldCompletedEventHandler(object sender, fun_lldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_lldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_lldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_四个量CompletedEventHandler(object sender, fun_四个量CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_四个量CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_四个量CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckAuthorityCompletedEventHandler(object sender, CheckAuthorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WS_PingCompletedEventHandler(object sender, WS_PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591