//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WSAdapter.MasterMESWSMain {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MESWSMainSoap", Namespace="http://MasterMES.cn/ws1")]
    public partial class MESWSMain : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_ConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetData_connOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQL_connOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetData_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEXSQL_ERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_发送流转卡OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_字段说明OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_流转卡状态OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_开工日报OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_完工日报OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_不合格日报OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_质量日报OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_流转卡函数_检验工序_质量日报OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAuthorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_Init初始化仓库物料OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_初始化仓库物料表OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_初始化物料数量表OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_初始化物料数量表_历史OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_物料数量_实际数量OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_物料数量_在途量OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_物料数量_在制量OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_物料数量_受订单OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_物料数量_末领量OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_出入库_采购入库OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_出入库_成品入库OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_出入库_成品出库OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_出入库_领料出库OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_仓库物料数量_库存总量OperationCompleted;
        
        private System.Threading.SendOrPostCallback fun_仓库物料_库存总量OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MESWSMain() {
            this.Url = global::WSAdapter.Properties.Settings.Default.WSAdapter_MasterMESWSMain_MESWSMain;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetData_ConnCompletedEventHandler GetData_ConnCompleted;
        
        /// <remarks/>
        public event SetDataCompletedEventHandler SetDataCompleted;
        
        /// <remarks/>
        public event SetData_connCompletedEventHandler SetData_connCompleted;
        
        /// <remarks/>
        public event SetEXSQLCompletedEventHandler SetEXSQLCompleted;
        
        /// <remarks/>
        public event SetEXSQL_connCompletedEventHandler SetEXSQL_connCompleted;
        
        /// <remarks/>
        public event GetData_ERPCompletedEventHandler GetData_ERPCompleted;
        
        /// <remarks/>
        public event SetData_ERPCompletedEventHandler SetData_ERPCompleted;
        
        /// <remarks/>
        public event SetEXSQL_ERPCompletedEventHandler SetEXSQL_ERPCompleted;
        
        /// <remarks/>
        public event fun_流转卡函数_发送流转卡CompletedEventHandler fun_流转卡函数_发送流转卡Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_字段说明CompletedEventHandler fun_流转卡函数_字段说明Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_流转卡状态CompletedEventHandler fun_流转卡函数_流转卡状态Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_开工日报CompletedEventHandler fun_流转卡函数_开工日报Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_完工日报CompletedEventHandler fun_流转卡函数_完工日报Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_不合格日报CompletedEventHandler fun_流转卡函数_不合格日报Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_质量日报CompletedEventHandler fun_流转卡函数_质量日报Completed;
        
        /// <remarks/>
        public event fun_流转卡函数_检验工序_质量日报CompletedEventHandler fun_流转卡函数_检验工序_质量日报Completed;
        
        /// <remarks/>
        public event CheckAuthorityCompletedEventHandler CheckAuthorityCompleted;
        
        /// <remarks/>
        public event WS_PingCompletedEventHandler WS_PingCompleted;
        
        /// <remarks/>
        public event fun_Init初始化仓库物料CompletedEventHandler fun_Init初始化仓库物料Completed;
        
        /// <remarks/>
        public event fun_初始化仓库物料表CompletedEventHandler fun_初始化仓库物料表Completed;
        
        /// <remarks/>
        public event fun_初始化物料数量表CompletedEventHandler fun_初始化物料数量表Completed;
        
        /// <remarks/>
        public event fun_初始化物料数量表_历史CompletedEventHandler fun_初始化物料数量表_历史Completed;
        
        /// <remarks/>
        public event fun_物料数量_实际数量CompletedEventHandler fun_物料数量_实际数量Completed;
        
        /// <remarks/>
        public event fun_物料数量_在途量CompletedEventHandler fun_物料数量_在途量Completed;
        
        /// <remarks/>
        public event fun_物料数量_在制量CompletedEventHandler fun_物料数量_在制量Completed;
        
        /// <remarks/>
        public event fun_物料数量_受订单CompletedEventHandler fun_物料数量_受订单Completed;
        
        /// <remarks/>
        public event fun_物料数量_末领量CompletedEventHandler fun_物料数量_末领量Completed;
        
        /// <remarks/>
        public event fun_出入库_采购入库CompletedEventHandler fun_出入库_采购入库Completed;
        
        /// <remarks/>
        public event fun_出入库_成品入库CompletedEventHandler fun_出入库_成品入库Completed;
        
        /// <remarks/>
        public event fun_出入库_成品出库CompletedEventHandler fun_出入库_成品出库Completed;
        
        /// <remarks/>
        public event fun_出入库_领料出库CompletedEventHandler fun_出入库_领料出库Completed;
        
        /// <remarks/>
        public event fun_仓库物料数量_库存总量CompletedEventHandler fun_仓库物料数量_库存总量Completed;
        
        /// <remarks/>
        public event fun_仓库物料_库存总量CompletedEventHandler fun_仓库物料_库存总量Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/GetData", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData(string SQL) {
            object[] results = this.Invoke("GetData", new object[] {
                        SQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL) {
            this.GetDataAsync(SQL, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        SQL}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/GetData_Conn", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData_Conn(string SQL, string strConn) {
            object[] results = this.Invoke("GetData_Conn", new object[] {
                        SQL,
                        strConn});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_ConnAsync(string SQL, string strConn) {
            this.GetData_ConnAsync(SQL, strConn, null);
        }
        
        /// <remarks/>
        public void GetData_ConnAsync(string SQL, string strConn, object userState) {
            if ((this.GetData_ConnOperationCompleted == null)) {
                this.GetData_ConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_ConnOperationCompleted);
            }
            this.InvokeAsync("GetData_Conn", new object[] {
                        SQL,
                        strConn}, this.GetData_ConnOperationCompleted, userState);
        }
        
        private void OnGetData_ConnOperationCompleted(object arg) {
            if ((this.GetData_ConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_ConnCompleted(this, new GetData_ConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/SetData", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData(string tableName, System.Data.DataTable dt) {
            this.Invoke("SetData", new object[] {
                        tableName,
                        dt});
        }
        
        /// <remarks/>
        public void SetDataAsync(string tableName, System.Data.DataTable dt) {
            this.SetDataAsync(tableName, dt, null);
        }
        
        /// <remarks/>
        public void SetDataAsync(string tableName, System.Data.DataTable dt, object userState) {
            if ((this.SetDataOperationCompleted == null)) {
                this.SetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataOperationCompleted);
            }
            this.InvokeAsync("SetData", new object[] {
                        tableName,
                        dt}, this.SetDataOperationCompleted, userState);
        }
        
        private void OnSetDataOperationCompleted(object arg) {
            if ((this.SetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/SetData_conn", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData_conn(string tableName, System.Data.DataTable dt, string strConn) {
            this.Invoke("SetData_conn", new object[] {
                        tableName,
                        dt,
                        strConn});
        }
        
        /// <remarks/>
        public void SetData_connAsync(string tableName, System.Data.DataTable dt, string strConn) {
            this.SetData_connAsync(tableName, dt, strConn, null);
        }
        
        /// <remarks/>
        public void SetData_connAsync(string tableName, System.Data.DataTable dt, string strConn, object userState) {
            if ((this.SetData_connOperationCompleted == null)) {
                this.SetData_connOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetData_connOperationCompleted);
            }
            this.InvokeAsync("SetData_conn", new object[] {
                        tableName,
                        dt,
                        strConn}, this.SetData_connOperationCompleted, userState);
        }
        
        private void OnSetData_connOperationCompleted(object arg) {
            if ((this.SetData_connCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetData_connCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/SetEXSQL", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL(string SQL) {
            object[] results = this.Invoke("SetEXSQL", new object[] {
                        SQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQLAsync(string SQL) {
            this.SetEXSQLAsync(SQL, null);
        }
        
        /// <remarks/>
        public void SetEXSQLAsync(string SQL, object userState) {
            if ((this.SetEXSQLOperationCompleted == null)) {
                this.SetEXSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQLOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL", new object[] {
                        SQL}, this.SetEXSQLOperationCompleted, userState);
        }
        
        private void OnSetEXSQLOperationCompleted(object arg) {
            if ((this.SetEXSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQLCompleted(this, new SetEXSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/SetEXSQL_conn", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL_conn(string SQL, string strConn) {
            object[] results = this.Invoke("SetEXSQL_conn", new object[] {
                        SQL,
                        strConn});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQL_connAsync(string SQL, string strConn) {
            this.SetEXSQL_connAsync(SQL, strConn, null);
        }
        
        /// <remarks/>
        public void SetEXSQL_connAsync(string SQL, string strConn, object userState) {
            if ((this.SetEXSQL_connOperationCompleted == null)) {
                this.SetEXSQL_connOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQL_connOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL_conn", new object[] {
                        SQL,
                        strConn}, this.SetEXSQL_connOperationCompleted, userState);
        }
        
        private void OnSetEXSQL_connOperationCompleted(object arg) {
            if ((this.SetEXSQL_connCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQL_connCompleted(this, new SetEXSQL_connCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/GetData_ERP", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData_ERP(string SQL) {
            object[] results = this.Invoke("GetData_ERP", new object[] {
                        SQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_ERPAsync(string SQL) {
            this.GetData_ERPAsync(SQL, null);
        }
        
        /// <remarks/>
        public void GetData_ERPAsync(string SQL, object userState) {
            if ((this.GetData_ERPOperationCompleted == null)) {
                this.GetData_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_ERPOperationCompleted);
            }
            this.InvokeAsync("GetData_ERP", new object[] {
                        SQL}, this.GetData_ERPOperationCompleted, userState);
        }
        
        private void OnGetData_ERPOperationCompleted(object arg) {
            if ((this.GetData_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_ERPCompleted(this, new GetData_ERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/SetData_ERP", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData_ERP(string tableName, System.Data.DataTable dt) {
            this.Invoke("SetData_ERP", new object[] {
                        tableName,
                        dt});
        }
        
        /// <remarks/>
        public void SetData_ERPAsync(string tableName, System.Data.DataTable dt) {
            this.SetData_ERPAsync(tableName, dt, null);
        }
        
        /// <remarks/>
        public void SetData_ERPAsync(string tableName, System.Data.DataTable dt, object userState) {
            if ((this.SetData_ERPOperationCompleted == null)) {
                this.SetData_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetData_ERPOperationCompleted);
            }
            this.InvokeAsync("SetData_ERP", new object[] {
                        tableName,
                        dt}, this.SetData_ERPOperationCompleted, userState);
        }
        
        private void OnSetData_ERPOperationCompleted(object arg) {
            if ((this.SetData_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetData_ERPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/SetEXSQL_ERP", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEXSQL_ERP(string SQL) {
            object[] results = this.Invoke("SetEXSQL_ERP", new object[] {
                        SQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEXSQL_ERPAsync(string SQL) {
            this.SetEXSQL_ERPAsync(SQL, null);
        }
        
        /// <remarks/>
        public void SetEXSQL_ERPAsync(string SQL, object userState) {
            if ((this.SetEXSQL_ERPOperationCompleted == null)) {
                this.SetEXSQL_ERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEXSQL_ERPOperationCompleted);
            }
            this.InvokeAsync("SetEXSQL_ERP", new object[] {
                        SQL}, this.SetEXSQL_ERPOperationCompleted, userState);
        }
        
        private void OnSetEXSQL_ERPOperationCompleted(object arg) {
            if ((this.SetEXSQL_ERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEXSQL_ERPCompleted(this, new SetEXSQL_ERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_发送流转卡", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int fun_流转卡函数_发送流转卡(string strMO) {
            object[] results = this.Invoke("fun_流转卡函数_发送流转卡", new object[] {
                        strMO});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_发送流转卡Async(string strMO) {
            this.fun_流转卡函数_发送流转卡Async(strMO, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_发送流转卡Async(string strMO, object userState) {
            if ((this.fun_流转卡函数_发送流转卡OperationCompleted == null)) {
                this.fun_流转卡函数_发送流转卡OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_发送流转卡OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_发送流转卡", new object[] {
                        strMO}, this.fun_流转卡函数_发送流转卡OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_发送流转卡OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_发送流转卡Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_发送流转卡Completed(this, new fun_流转卡函数_发送流转卡CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_字段说明", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fun_流转卡函数_字段说明() {
            object[] results = this.Invoke("fun_流转卡函数_字段说明", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_字段说明Async() {
            this.fun_流转卡函数_字段说明Async(null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_字段说明Async(object userState) {
            if ((this.fun_流转卡函数_字段说明OperationCompleted == null)) {
                this.fun_流转卡函数_字段说明OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_字段说明OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_字段说明", new object[0], this.fun_流转卡函数_字段说明OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_字段说明OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_字段说明Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_字段说明Completed(this, new fun_流转卡函数_字段说明CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_流转卡状态", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable fun_流转卡函数_流转卡状态(string strMO) {
            object[] results = this.Invoke("fun_流转卡函数_流转卡状态", new object[] {
                        strMO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_流转卡状态Async(string strMO) {
            this.fun_流转卡函数_流转卡状态Async(strMO, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_流转卡状态Async(string strMO, object userState) {
            if ((this.fun_流转卡函数_流转卡状态OperationCompleted == null)) {
                this.fun_流转卡函数_流转卡状态OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_流转卡状态OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_流转卡状态", new object[] {
                        strMO}, this.fun_流转卡函数_流转卡状态OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_流转卡状态OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_流转卡状态Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_流转卡状态Completed(this, new fun_流转卡函数_流转卡状态CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_开工日报", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int fun_流转卡函数_开工日报(string strMO, string str软件系统用户, string str工序操作员, string strMachine, int POS, int step) {
            object[] results = this.Invoke("fun_流转卡函数_开工日报", new object[] {
                        strMO,
                        str软件系统用户,
                        str工序操作员,
                        strMachine,
                        POS,
                        step});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_开工日报Async(string strMO, string str软件系统用户, string str工序操作员, string strMachine, int POS, int step) {
            this.fun_流转卡函数_开工日报Async(strMO, str软件系统用户, str工序操作员, strMachine, POS, step, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_开工日报Async(string strMO, string str软件系统用户, string str工序操作员, string strMachine, int POS, int step, object userState) {
            if ((this.fun_流转卡函数_开工日报OperationCompleted == null)) {
                this.fun_流转卡函数_开工日报OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_开工日报OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_开工日报", new object[] {
                        strMO,
                        str软件系统用户,
                        str工序操作员,
                        strMachine,
                        POS,
                        step}, this.fun_流转卡函数_开工日报OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_开工日报OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_开工日报Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_开工日报Completed(this, new fun_流转卡函数_开工日报CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_完工日报", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int fun_流转卡函数_完工日报(string strMO, decimal Number) {
            object[] results = this.Invoke("fun_流转卡函数_完工日报", new object[] {
                        strMO,
                        Number});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_完工日报Async(string strMO, decimal Number) {
            this.fun_流转卡函数_完工日报Async(strMO, Number, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_完工日报Async(string strMO, decimal Number, object userState) {
            if ((this.fun_流转卡函数_完工日报OperationCompleted == null)) {
                this.fun_流转卡函数_完工日报OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_完工日报OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_完工日报", new object[] {
                        strMO,
                        Number}, this.fun_流转卡函数_完工日报OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_完工日报OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_完工日报Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_完工日报Completed(this, new fun_流转卡函数_完工日报CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_不合格日报", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int fun_流转卡函数_不合格日报(string strMO, System.Data.DataTable dtP) {
            object[] results = this.Invoke("fun_流转卡函数_不合格日报", new object[] {
                        strMO,
                        dtP});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_不合格日报Async(string strMO, System.Data.DataTable dtP) {
            this.fun_流转卡函数_不合格日报Async(strMO, dtP, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_不合格日报Async(string strMO, System.Data.DataTable dtP, object userState) {
            if ((this.fun_流转卡函数_不合格日报OperationCompleted == null)) {
                this.fun_流转卡函数_不合格日报OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_不合格日报OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_不合格日报", new object[] {
                        strMO,
                        dtP}, this.fun_流转卡函数_不合格日报OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_不合格日报OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_不合格日报Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_不合格日报Completed(this, new fun_流转卡函数_不合格日报CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_质量日报", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fun_流转卡函数_质量日报(string strMO, string strUserName) {
            object[] results = this.Invoke("fun_流转卡函数_质量日报", new object[] {
                        strMO,
                        strUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_质量日报Async(string strMO, string strUserName) {
            this.fun_流转卡函数_质量日报Async(strMO, strUserName, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_质量日报Async(string strMO, string strUserName, object userState) {
            if ((this.fun_流转卡函数_质量日报OperationCompleted == null)) {
                this.fun_流转卡函数_质量日报OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_质量日报OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_质量日报", new object[] {
                        strMO,
                        strUserName}, this.fun_流转卡函数_质量日报OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_质量日报OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_质量日报Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_质量日报Completed(this, new fun_流转卡函数_质量日报CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_流转卡函数_检验工序_质量日报", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fun_流转卡函数_检验工序_质量日报(string strMO, string strUserName) {
            object[] results = this.Invoke("fun_流转卡函数_检验工序_质量日报", new object[] {
                        strMO,
                        strUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fun_流转卡函数_检验工序_质量日报Async(string strMO, string strUserName) {
            this.fun_流转卡函数_检验工序_质量日报Async(strMO, strUserName, null);
        }
        
        /// <remarks/>
        public void fun_流转卡函数_检验工序_质量日报Async(string strMO, string strUserName, object userState) {
            if ((this.fun_流转卡函数_检验工序_质量日报OperationCompleted == null)) {
                this.fun_流转卡函数_检验工序_质量日报OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_流转卡函数_检验工序_质量日报OperationCompleted);
            }
            this.InvokeAsync("fun_流转卡函数_检验工序_质量日报", new object[] {
                        strMO,
                        strUserName}, this.fun_流转卡函数_检验工序_质量日报OperationCompleted, userState);
        }
        
        private void Onfun_流转卡函数_检验工序_质量日报OperationCompleted(object arg) {
            if ((this.fun_流转卡函数_检验工序_质量日报Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_流转卡函数_检验工序_质量日报Completed(this, new fun_流转卡函数_检验工序_质量日报CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/CheckAuthority", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckAuthority(string UserName, string Pdesc) {
            object[] results = this.Invoke("CheckAuthority", new object[] {
                        UserName,
                        Pdesc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAuthorityAsync(string UserName, string Pdesc) {
            this.CheckAuthorityAsync(UserName, Pdesc, null);
        }
        
        /// <remarks/>
        public void CheckAuthorityAsync(string UserName, string Pdesc, object userState) {
            if ((this.CheckAuthorityOperationCompleted == null)) {
                this.CheckAuthorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAuthorityOperationCompleted);
            }
            this.InvokeAsync("CheckAuthority", new object[] {
                        UserName,
                        Pdesc}, this.CheckAuthorityOperationCompleted, userState);
        }
        
        private void OnCheckAuthorityOperationCompleted(object arg) {
            if ((this.CheckAuthorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAuthorityCompleted(this, new CheckAuthorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/WS_Ping", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WS_Ping(string PingID) {
            object[] results = this.Invoke("WS_Ping", new object[] {
                        PingID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WS_PingAsync(string PingID) {
            this.WS_PingAsync(PingID, null);
        }
        
        /// <remarks/>
        public void WS_PingAsync(string PingID, object userState) {
            if ((this.WS_PingOperationCompleted == null)) {
                this.WS_PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_PingOperationCompleted);
            }
            this.InvokeAsync("WS_Ping", new object[] {
                        PingID}, this.WS_PingOperationCompleted, userState);
        }
        
        private void OnWS_PingOperationCompleted(object arg) {
            if ((this.WS_PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_PingCompleted(this, new WS_PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_Init初始化仓库物料", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_Init初始化仓库物料(string str_库位号, string strconn, string str_ItemNo, decimal qty, string TransactionName) {
            this.Invoke("fun_Init初始化仓库物料", new object[] {
                        str_库位号,
                        strconn,
                        str_ItemNo,
                        qty,
                        TransactionName});
        }
        
        /// <remarks/>
        public void fun_Init初始化仓库物料Async(string str_库位号, string strconn, string str_ItemNo, decimal qty, string TransactionName) {
            this.fun_Init初始化仓库物料Async(str_库位号, strconn, str_ItemNo, qty, TransactionName, null);
        }
        
        /// <remarks/>
        public void fun_Init初始化仓库物料Async(string str_库位号, string strconn, string str_ItemNo, decimal qty, string TransactionName, object userState) {
            if ((this.fun_Init初始化仓库物料OperationCompleted == null)) {
                this.fun_Init初始化仓库物料OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_Init初始化仓库物料OperationCompleted);
            }
            this.InvokeAsync("fun_Init初始化仓库物料", new object[] {
                        str_库位号,
                        strconn,
                        str_ItemNo,
                        qty,
                        TransactionName}, this.fun_Init初始化仓库物料OperationCompleted, userState);
        }
        
        private void Onfun_Init初始化仓库物料OperationCompleted(object arg) {
            if ((this.fun_Init初始化仓库物料Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_Init初始化仓库物料Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_初始化仓库物料表", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_初始化仓库物料表(string str_库位号, string strconn, string str_ItemNo, decimal qty, string TransactionName) {
            this.Invoke("fun_初始化仓库物料表", new object[] {
                        str_库位号,
                        strconn,
                        str_ItemNo,
                        qty,
                        TransactionName});
        }
        
        /// <remarks/>
        public void fun_初始化仓库物料表Async(string str_库位号, string strconn, string str_ItemNo, decimal qty, string TransactionName) {
            this.fun_初始化仓库物料表Async(str_库位号, strconn, str_ItemNo, qty, TransactionName, null);
        }
        
        /// <remarks/>
        public void fun_初始化仓库物料表Async(string str_库位号, string strconn, string str_ItemNo, decimal qty, string TransactionName, object userState) {
            if ((this.fun_初始化仓库物料表OperationCompleted == null)) {
                this.fun_初始化仓库物料表OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_初始化仓库物料表OperationCompleted);
            }
            this.InvokeAsync("fun_初始化仓库物料表", new object[] {
                        str_库位号,
                        strconn,
                        str_ItemNo,
                        qty,
                        TransactionName}, this.fun_初始化仓库物料表OperationCompleted, userState);
        }
        
        private void Onfun_初始化仓库物料表OperationCompleted(object arg) {
            if ((this.fun_初始化仓库物料表Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_初始化仓库物料表Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_初始化物料数量表", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_初始化物料数量表(string str_ItemNo, string strconn, decimal qty, string TransactionName) {
            this.Invoke("fun_初始化物料数量表", new object[] {
                        str_ItemNo,
                        strconn,
                        qty,
                        TransactionName});
        }
        
        /// <remarks/>
        public void fun_初始化物料数量表Async(string str_ItemNo, string strconn, decimal qty, string TransactionName) {
            this.fun_初始化物料数量表Async(str_ItemNo, strconn, qty, TransactionName, null);
        }
        
        /// <remarks/>
        public void fun_初始化物料数量表Async(string str_ItemNo, string strconn, decimal qty, string TransactionName, object userState) {
            if ((this.fun_初始化物料数量表OperationCompleted == null)) {
                this.fun_初始化物料数量表OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_初始化物料数量表OperationCompleted);
            }
            this.InvokeAsync("fun_初始化物料数量表", new object[] {
                        str_ItemNo,
                        strconn,
                        qty,
                        TransactionName}, this.fun_初始化物料数量表OperationCompleted, userState);
        }
        
        private void Onfun_初始化物料数量表OperationCompleted(object arg) {
            if ((this.fun_初始化物料数量表Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_初始化物料数量表Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_初始化物料数量表_历史", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_初始化物料数量表_历史(string str_ItemNo, string strconn, decimal qty, string TransactionName) {
            this.Invoke("fun_初始化物料数量表_历史", new object[] {
                        str_ItemNo,
                        strconn,
                        qty,
                        TransactionName});
        }
        
        /// <remarks/>
        public void fun_初始化物料数量表_历史Async(string str_ItemNo, string strconn, decimal qty, string TransactionName) {
            this.fun_初始化物料数量表_历史Async(str_ItemNo, strconn, qty, TransactionName, null);
        }
        
        /// <remarks/>
        public void fun_初始化物料数量表_历史Async(string str_ItemNo, string strconn, decimal qty, string TransactionName, object userState) {
            if ((this.fun_初始化物料数量表_历史OperationCompleted == null)) {
                this.fun_初始化物料数量表_历史OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_初始化物料数量表_历史OperationCompleted);
            }
            this.InvokeAsync("fun_初始化物料数量表_历史", new object[] {
                        str_ItemNo,
                        strconn,
                        qty,
                        TransactionName}, this.fun_初始化物料数量表_历史OperationCompleted, userState);
        }
        
        private void Onfun_初始化物料数量表_历史OperationCompleted(object arg) {
            if ((this.fun_初始化物料数量表_历史Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_初始化物料数量表_历史Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_物料数量_实际数量", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal fun_物料数量_实际数量(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            object[] results = this.Invoke("fun_物料数量_实际数量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void fun_物料数量_实际数量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            this.fun_物料数量_实际数量Async(str_ItemNo, strconn, TransactionName, Refresh, null);
        }
        
        /// <remarks/>
        public void fun_物料数量_实际数量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh, object userState) {
            if ((this.fun_物料数量_实际数量OperationCompleted == null)) {
                this.fun_物料数量_实际数量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_物料数量_实际数量OperationCompleted);
            }
            this.InvokeAsync("fun_物料数量_实际数量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh}, this.fun_物料数量_实际数量OperationCompleted, userState);
        }
        
        private void Onfun_物料数量_实际数量OperationCompleted(object arg) {
            if ((this.fun_物料数量_实际数量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_物料数量_实际数量Completed(this, new fun_物料数量_实际数量CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_物料数量_在途量", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal fun_物料数量_在途量(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            object[] results = this.Invoke("fun_物料数量_在途量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void fun_物料数量_在途量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            this.fun_物料数量_在途量Async(str_ItemNo, strconn, TransactionName, Refresh, null);
        }
        
        /// <remarks/>
        public void fun_物料数量_在途量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh, object userState) {
            if ((this.fun_物料数量_在途量OperationCompleted == null)) {
                this.fun_物料数量_在途量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_物料数量_在途量OperationCompleted);
            }
            this.InvokeAsync("fun_物料数量_在途量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh}, this.fun_物料数量_在途量OperationCompleted, userState);
        }
        
        private void Onfun_物料数量_在途量OperationCompleted(object arg) {
            if ((this.fun_物料数量_在途量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_物料数量_在途量Completed(this, new fun_物料数量_在途量CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_物料数量_在制量", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal fun_物料数量_在制量(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            object[] results = this.Invoke("fun_物料数量_在制量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void fun_物料数量_在制量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            this.fun_物料数量_在制量Async(str_ItemNo, strconn, TransactionName, Refresh, null);
        }
        
        /// <remarks/>
        public void fun_物料数量_在制量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh, object userState) {
            if ((this.fun_物料数量_在制量OperationCompleted == null)) {
                this.fun_物料数量_在制量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_物料数量_在制量OperationCompleted);
            }
            this.InvokeAsync("fun_物料数量_在制量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh}, this.fun_物料数量_在制量OperationCompleted, userState);
        }
        
        private void Onfun_物料数量_在制量OperationCompleted(object arg) {
            if ((this.fun_物料数量_在制量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_物料数量_在制量Completed(this, new fun_物料数量_在制量CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_物料数量_受订单", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal fun_物料数量_受订单(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            object[] results = this.Invoke("fun_物料数量_受订单", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void fun_物料数量_受订单Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            this.fun_物料数量_受订单Async(str_ItemNo, strconn, TransactionName, Refresh, null);
        }
        
        /// <remarks/>
        public void fun_物料数量_受订单Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh, object userState) {
            if ((this.fun_物料数量_受订单OperationCompleted == null)) {
                this.fun_物料数量_受订单OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_物料数量_受订单OperationCompleted);
            }
            this.InvokeAsync("fun_物料数量_受订单", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh}, this.fun_物料数量_受订单OperationCompleted, userState);
        }
        
        private void Onfun_物料数量_受订单OperationCompleted(object arg) {
            if ((this.fun_物料数量_受订单Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_物料数量_受订单Completed(this, new fun_物料数量_受订单CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_物料数量_末领量", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal fun_物料数量_末领量(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            object[] results = this.Invoke("fun_物料数量_末领量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void fun_物料数量_末领量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh) {
            this.fun_物料数量_末领量Async(str_ItemNo, strconn, TransactionName, Refresh, null);
        }
        
        /// <remarks/>
        public void fun_物料数量_末领量Async(string str_ItemNo, string strconn, string TransactionName, bool Refresh, object userState) {
            if ((this.fun_物料数量_末领量OperationCompleted == null)) {
                this.fun_物料数量_末领量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_物料数量_末领量OperationCompleted);
            }
            this.InvokeAsync("fun_物料数量_末领量", new object[] {
                        str_ItemNo,
                        strconn,
                        TransactionName,
                        Refresh}, this.fun_物料数量_末领量OperationCompleted, userState);
        }
        
        private void Onfun_物料数量_末领量OperationCompleted(object arg) {
            if ((this.fun_物料数量_末领量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_物料数量_末领量Completed(this, new fun_物料数量_末领量CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_出入库_采购入库", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_出入库_采购入库(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.Invoke("fun_出入库_采购入库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号});
        }
        
        /// <remarks/>
        public void fun_出入库_采购入库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.fun_出入库_采购入库Async(str_ItemNo, strconn, Qty, TransactionName, str_库位号, null);
        }
        
        /// <remarks/>
        public void fun_出入库_采购入库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号, object userState) {
            if ((this.fun_出入库_采购入库OperationCompleted == null)) {
                this.fun_出入库_采购入库OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_出入库_采购入库OperationCompleted);
            }
            this.InvokeAsync("fun_出入库_采购入库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号}, this.fun_出入库_采购入库OperationCompleted, userState);
        }
        
        private void Onfun_出入库_采购入库OperationCompleted(object arg) {
            if ((this.fun_出入库_采购入库Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_出入库_采购入库Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_出入库_成品入库", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_出入库_成品入库(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.Invoke("fun_出入库_成品入库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号});
        }
        
        /// <remarks/>
        public void fun_出入库_成品入库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.fun_出入库_成品入库Async(str_ItemNo, strconn, Qty, TransactionName, str_库位号, null);
        }
        
        /// <remarks/>
        public void fun_出入库_成品入库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号, object userState) {
            if ((this.fun_出入库_成品入库OperationCompleted == null)) {
                this.fun_出入库_成品入库OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_出入库_成品入库OperationCompleted);
            }
            this.InvokeAsync("fun_出入库_成品入库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号}, this.fun_出入库_成品入库OperationCompleted, userState);
        }
        
        private void Onfun_出入库_成品入库OperationCompleted(object arg) {
            if ((this.fun_出入库_成品入库Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_出入库_成品入库Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_出入库_成品出库", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_出入库_成品出库(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.Invoke("fun_出入库_成品出库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号});
        }
        
        /// <remarks/>
        public void fun_出入库_成品出库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.fun_出入库_成品出库Async(str_ItemNo, strconn, Qty, TransactionName, str_库位号, null);
        }
        
        /// <remarks/>
        public void fun_出入库_成品出库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号, object userState) {
            if ((this.fun_出入库_成品出库OperationCompleted == null)) {
                this.fun_出入库_成品出库OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_出入库_成品出库OperationCompleted);
            }
            this.InvokeAsync("fun_出入库_成品出库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号}, this.fun_出入库_成品出库OperationCompleted, userState);
        }
        
        private void Onfun_出入库_成品出库OperationCompleted(object arg) {
            if ((this.fun_出入库_成品出库Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_出入库_成品出库Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_出入库_领料出库", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_出入库_领料出库(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.Invoke("fun_出入库_领料出库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号});
        }
        
        /// <remarks/>
        public void fun_出入库_领料出库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.fun_出入库_领料出库Async(str_ItemNo, strconn, Qty, TransactionName, str_库位号, null);
        }
        
        /// <remarks/>
        public void fun_出入库_领料出库Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号, object userState) {
            if ((this.fun_出入库_领料出库OperationCompleted == null)) {
                this.fun_出入库_领料出库OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_出入库_领料出库OperationCompleted);
            }
            this.InvokeAsync("fun_出入库_领料出库", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号}, this.fun_出入库_领料出库OperationCompleted, userState);
        }
        
        private void Onfun_出入库_领料出库OperationCompleted(object arg) {
            if ((this.fun_出入库_领料出库Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_出入库_领料出库Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_仓库物料数量_库存总量", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal fun_仓库物料数量_库存总量(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            object[] results = this.Invoke("fun_仓库物料数量_库存总量", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void fun_仓库物料数量_库存总量Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.fun_仓库物料数量_库存总量Async(str_ItemNo, strconn, Qty, TransactionName, str_库位号, null);
        }
        
        /// <remarks/>
        public void fun_仓库物料数量_库存总量Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号, object userState) {
            if ((this.fun_仓库物料数量_库存总量OperationCompleted == null)) {
                this.fun_仓库物料数量_库存总量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_仓库物料数量_库存总量OperationCompleted);
            }
            this.InvokeAsync("fun_仓库物料数量_库存总量", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号}, this.fun_仓库物料数量_库存总量OperationCompleted, userState);
        }
        
        private void Onfun_仓库物料数量_库存总量OperationCompleted(object arg) {
            if ((this.fun_仓库物料数量_库存总量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_仓库物料数量_库存总量Completed(this, new fun_仓库物料数量_库存总量CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MasterMES.cn/ws1/fun_仓库物料_库存总量", RequestNamespace="http://MasterMES.cn/ws1", ResponseNamespace="http://MasterMES.cn/ws1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fun_仓库物料_库存总量(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.Invoke("fun_仓库物料_库存总量", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号});
        }
        
        /// <remarks/>
        public void fun_仓库物料_库存总量Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号) {
            this.fun_仓库物料_库存总量Async(str_ItemNo, strconn, Qty, TransactionName, str_库位号, null);
        }
        
        /// <remarks/>
        public void fun_仓库物料_库存总量Async(string str_ItemNo, string strconn, decimal Qty, string TransactionName, string str_库位号, object userState) {
            if ((this.fun_仓库物料_库存总量OperationCompleted == null)) {
                this.fun_仓库物料_库存总量OperationCompleted = new System.Threading.SendOrPostCallback(this.Onfun_仓库物料_库存总量OperationCompleted);
            }
            this.InvokeAsync("fun_仓库物料_库存总量", new object[] {
                        str_ItemNo,
                        strconn,
                        Qty,
                        TransactionName,
                        str_库位号}, this.fun_仓库物料_库存总量OperationCompleted, userState);
        }
        
        private void Onfun_仓库物料_库存总量OperationCompleted(object arg) {
            if ((this.fun_仓库物料_库存总量Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fun_仓库物料_库存总量Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetData_ConnCompletedEventHandler(object sender, GetData_ConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_ConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_ConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetData_connCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQLCompletedEventHandler(object sender, SetEXSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQL_connCompletedEventHandler(object sender, SetEXSQL_connCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQL_connCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQL_connCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetData_ERPCompletedEventHandler(object sender, GetData_ERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_ERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_ERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetData_ERPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEXSQL_ERPCompletedEventHandler(object sender, SetEXSQL_ERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEXSQL_ERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEXSQL_ERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_发送流转卡CompletedEventHandler(object sender, fun_流转卡函数_发送流转卡CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_发送流转卡CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_发送流转卡CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_字段说明CompletedEventHandler(object sender, fun_流转卡函数_字段说明CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_字段说明CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_字段说明CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_流转卡状态CompletedEventHandler(object sender, fun_流转卡函数_流转卡状态CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_流转卡状态CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_流转卡状态CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_开工日报CompletedEventHandler(object sender, fun_流转卡函数_开工日报CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_开工日报CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_开工日报CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_完工日报CompletedEventHandler(object sender, fun_流转卡函数_完工日报CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_完工日报CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_完工日报CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_不合格日报CompletedEventHandler(object sender, fun_流转卡函数_不合格日报CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_不合格日报CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_不合格日报CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_质量日报CompletedEventHandler(object sender, fun_流转卡函数_质量日报CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_质量日报CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_质量日报CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_流转卡函数_检验工序_质量日报CompletedEventHandler(object sender, fun_流转卡函数_检验工序_质量日报CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_流转卡函数_检验工序_质量日报CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_流转卡函数_检验工序_质量日报CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckAuthorityCompletedEventHandler(object sender, CheckAuthorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WS_PingCompletedEventHandler(object sender, WS_PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_Init初始化仓库物料CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_初始化仓库物料表CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_初始化物料数量表CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_初始化物料数量表_历史CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_物料数量_实际数量CompletedEventHandler(object sender, fun_物料数量_实际数量CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_物料数量_实际数量CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_物料数量_实际数量CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_物料数量_在途量CompletedEventHandler(object sender, fun_物料数量_在途量CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_物料数量_在途量CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_物料数量_在途量CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_物料数量_在制量CompletedEventHandler(object sender, fun_物料数量_在制量CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_物料数量_在制量CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_物料数量_在制量CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_物料数量_受订单CompletedEventHandler(object sender, fun_物料数量_受订单CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_物料数量_受订单CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_物料数量_受订单CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_物料数量_末领量CompletedEventHandler(object sender, fun_物料数量_末领量CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_物料数量_末领量CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_物料数量_末领量CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_出入库_采购入库CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_出入库_成品入库CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_出入库_成品出库CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_出入库_领料出库CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_仓库物料数量_库存总量CompletedEventHandler(object sender, fun_仓库物料数量_库存总量CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fun_仓库物料数量_库存总量CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fun_仓库物料数量_库存总量CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void fun_仓库物料_库存总量CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591